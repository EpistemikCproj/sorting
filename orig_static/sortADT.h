/* sortADT.h - various sorting algorithms */#ifndef __SORTADT_H__#define __SORTADT_H__
#include <math.h>#include "d:\my_docs\prog\cproj\sorting\orig_static\queueADT.h"#define MAX 10000#define D1_MAX 999#define D2_MAX 13#define FLAG -99typedef unsigned int KEY ;typedef KEY SortingArray [MAX] ;typedef KEY RadixArray [D1_MAX][D2_MAX] ;/************** FUNCTION  PROTOTYPES ****************/BOOLEAN IsSorted(SortingArray, KEY);void Swap(KEY*, KEY*);KEY Largest(SortingArray, KEY, KEY);void SelectionSort(SortingArray, KEY);void SiftUp(SortingArray, KEY, KEY);void HeapSort(SortingArray, KEY);void Partition(SortingArray, KEY*, KEY*);void QuickSort(SortingArray, KEY, KEY);void RadixSort(SortingArray, KEY);void BigRadixSort(SortingArray, KEY);void Load(RadixArray, KEY, KEY, BOOLEAN*);KEY Take(RadixArray, KEY);BOOLEAN Is_empty(RadixArray, KEY);void ArrayRadixSort(SortingArray, KEY);#endif //__SORTADT_H__